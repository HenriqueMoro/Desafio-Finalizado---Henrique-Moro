[{"C:\\Users\\henri\\Desafio\\frontend\\src\\index.js":"1","C:\\Users\\henri\\Desafio\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\henri\\Desafio\\frontend\\src\\services\\api.js":"3","C:\\Users\\henri\\Desafio\\frontend\\src\\routes.js":"4","C:\\Users\\henri\\Desafio\\frontend\\src\\pages\\historic\\index.js":"5","C:\\Users\\henri\\Desafio\\frontend\\src\\components\\WeatherComponent\\WeatherComponent.js":"6","C:\\Users\\henri\\Desafio\\frontend\\src\\pages\\home\\home.js":"7"},{"size":509,"mtime":1612894987915,"results":"8","hashOfConfig":"9"},{"size":397,"mtime":1612746727122,"results":"10","hashOfConfig":"9"},{"size":118,"mtime":1612836422058,"results":"11","hashOfConfig":"9"},{"size":453,"mtime":1612894769284,"results":"12","hashOfConfig":"9"},{"size":4216,"mtime":1612900904063,"results":"13","hashOfConfig":"9"},{"size":5354,"mtime":1612901382327,"results":"14","hashOfConfig":"9"},{"size":1850,"mtime":1612901044721,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"g8zp3i",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\henri\\Desafio\\frontend\\src\\index.js",[],["32","33"],"C:\\Users\\henri\\Desafio\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\henri\\Desafio\\frontend\\src\\services\\api.js",[],"C:\\Users\\henri\\Desafio\\frontend\\src\\routes.js",[],"C:\\Users\\henri\\Desafio\\frontend\\src\\pages\\historic\\index.js",["34"],"C:\\Users\\henri\\Desafio\\frontend\\src\\components\\WeatherComponent\\WeatherComponent.js",["35","36"],"import './WeatherComponent.css';\r\nimport axios from 'axios';\r\nimport React, {useState, useEffect} from 'react';\r\n\r\nimport api from '../../services/api'\r\n\r\n\r\n\r\nconst DayName = ['Sunday','Monday','Tuesday','Wednesday', 'Thursday','Friday','Saturday']\r\nconst MonthName = ['January','February','March', 'April','May','June','July','August','September','October','November','December']\r\nlet now = new Date() \r\n  \r\n\r\n  function WeatherComponent(props) {\r\n    \r\n    const [Search, setSearch] = useState(false)\r\n    const [weather, setWeather] = useState(false)\r\n    const [query, setQuery] = useState(false)\r\n   \r\n    \r\n    useEffect(()=>{\r\n      if (props.loading === true){\r\n        setSearch( props.value)\r\n        }\r\n    },[props.loading])\r\n\r\n    //função para poder pegar o IP do usuario atravez de uma api, se a pesquisa for falsa ele pega o ip, se não for ele usa o dado da pesquisa\r\n     useEffect(()=>{\r\n      if (Search === false){\r\n\r\n      axios.get('https://api64.ipify.org').then(response => {\r\n      setQuery(response.data);\r\n\r\n    }).catch(error => {console.log(error)})\r\n    }\r\n    else{\r\n    \r\n      setQuery(Search)\r\n      \r\n    }\r\n  \r\n  \r\n  },[Search])\r\n    //api para pegar os dados climaticos\r\n    useEffect(()=>{\r\n      const params = {\r\n        access_key: '3cdef95e4dfcaf32d9212120b01f4cf8',\r\n        query: query,\r\n      }\r\n    axios.get('http://api.weatherstack.com/current', {params})\r\n    .then(response => {\r\n    \r\n    if(response.data.success === false){\r\n      console.log('erro')\r\n    } \r\n    else {\r\n      //enviando os dados para o backend para poder armazenar\r\n    setWeather(response.data)\r\n    console.log(response.data)\r\n    const name = response.data.location.name\r\n    const country = response.data.location.country\r\n    const  localtime=response.data.location.localtime\r\n    const  temperature=response.data.current.temperature\r\n    const  icons=response.data.current.weather_icons\r\n    const  wind=response.data.current.wind_speed\r\n    const  pressure=response.data.current.pressure\r\n    const  precip=response.data.current.precip\r\n    const  humidity=response.data.current.humidity\r\n    const  feelslike=response.data.current.feelslike\r\n    const  visibility=response.data.current.visibility\r\n      \r\n      const data = {\r\n        name,\r\n        country,\r\n        localtime,\r\n        temperature,\r\n        icons,\r\n        wind,\r\n        pressure,\r\n        precip,\r\n        humidity,\r\n        feelslike,\r\n        visibility,\r\n      }\r\n      console.log(data)\r\n      api.post('/', data).then(response => {console.log('Sucesso')})\r\n}\r\n    \r\n    }).catch(error => {\r\n      console.log(error);\r\n    });\r\n    },[query])\r\n   \r\n    \r\n    \r\n  if (weather === false){\r\n    return(\r\n    <h1>\r\n      \r\n    </h1>)\r\n  }\r\n  else {\r\n    return (\r\n      <div className='component-card'>\r\n        \r\n        <div className='location-data'>\r\n          <h1 className='location-location'>{weather.location.name}, {weather.location.country}</h1>\r\n          <div>{DayName[now.getDay()]} {now.getDate()} {MonthName[now.getMonth()]}</div>\r\n        </div>\r\n        \r\n        <div className='div'>\r\n          \r\n          <div className='temperature_icon-container'>\r\n            \r\n            <div className='icon-container'>\r\n              <img  className='weather-icon' src={weather.current.weather_icons}></img>\r\n            </div>\r\n            \r\n            <div className='temperature-container'>\r\n              <div className='temperature-value'>{weather.current.temperature}°C</div>\r\n              <div className='weather-description'>{weather.current.weather_descriptions}</div>\r\n            </div>\r\n            \r\n            </div>\r\n            <div className='stats'>\r\n              <div className='stats-col'>\r\n                  <div>\r\n                    <div className='stats-number'>{weather.current.feelslike}°C</div>\r\n                    <div className='stats-description'>Fellslike</div>\r\n                  </div>\r\n                  <div>\r\n                    <div className='stats-number'>{weather.current.pressure}mb</div>\r\n                    <div className='stats-description'>Pressure</div>\r\n                  </div>\r\n                  <div>\r\n                    <div className='stats-number'>{weather.current.visibility}km</div>\r\n                    <div className='stats-description'>Visibility</div>\r\n                  </div>\r\n              </div>\r\n              <div className='stats-col'>\r\n                  <div>\r\n                    <div className='stats-number'>{weather.current.wind_speed}kmph</div>\r\n                    <div className='stats-description'>Wind</div>\r\n                  </div>\r\n                  <div>\r\n                    <div className='stats-number'>{weather.current.precip}mm</div>\r\n                    <div className='stats-description'>Precipitation</div>\r\n                  </div>\r\n                  <div>\r\n                    <div className='stats-number'>{weather.current.humidity}%</div>\r\n                    <div className='stats-description'>Humidity</div>\r\n                  </div>\r\n              </div>  \r\n                    \r\n                    \r\n                    \r\n            </div>\r\n                  \r\n                  \r\n                \r\n          \r\n          \r\n          \r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeatherComponent;\r\n","C:\\Users\\henri\\Desafio\\frontend\\src\\pages\\home\\home.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":53,"column":23,"nodeType":"43","endLine":53,"endColumn":72},{"ruleId":"44","severity":1,"message":"45","line":25,"column":7,"nodeType":"46","endLine":25,"endColumn":22,"suggestions":"47"},{"ruleId":"41","severity":1,"message":"42","line":116,"column":15,"nodeType":"43","endLine":116,"endColumn":82},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.value'. Either include it or remove the dependency array. If 'setSearch' needs the current value of 'props.value', you can also switch to useReducer instead of useState and read 'props.value' in the reducer.","ArrayExpression",["50"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [props.loading, props.value]",{"range":"53","text":"54"},[720,735],"[props.loading, props.value]"]